#!/usr/bin/env pwsh
$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent

$exe=""
$env_node_path=$env:NODE_PATH
$env:NODE_PATH="C:\Users\dhruv\Documents\GitHub\New folder\node_modules\.pnpm\registry.npmjs.org\rollup\1.15.5\node_modules\rollup\bin\rollup\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\.pnpm\registry.npmjs.org\rollup\1.15.5\node_modules\rollup\bin\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\.pnpm\registry.npmjs.org\rollup\1.15.5\node_modules\rollup\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\.pnpm\registry.npmjs.org\rollup\1.15.5\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\.pnpm\registry.npmjs.org\rollup\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\.pnpm\registry.npmjs.org\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\.pnpm\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules;C:\Users\dhruv\Documents\GitHub\node_modules;C:\Users\dhruv\Documents\node_modules;C:\Users\dhruv\node_modules;C:\Users\node_modules;C:\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\rollup\bin\rollup\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\rollup\bin\node_modules;C:\Users\dhruv\Documents\GitHub\New folder\node_modules\rollup\node_modules"
if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
  # Fix case when both the Windows and Linux builds of Node
  # are installed in the same directory
  $exe=".exe"
} else {
  $env:NODE_PATH="/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/.pnpm/registry.npmjs.org/rollup/1.15.5/node_modules/rollup/bin/rollup/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/.pnpm/registry.npmjs.org/rollup/1.15.5/node_modules/rollup/bin/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/.pnpm/registry.npmjs.org/rollup/1.15.5/node_modules/rollup/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/.pnpm/registry.npmjs.org/rollup/1.15.5/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/.pnpm/registry.npmjs.org/rollup/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/.pnpm/registry.npmjs.org/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/.pnpm/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/node_modules:/mnt/c/Users/dhruv/Documents/node_modules:/mnt/c/Users/dhruv/node_modules:/mnt/c/Users/node_modules:/mnt/c/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/rollup/bin/rollup/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/rollup/bin/node_modules:/mnt/c/Users/dhruv/Documents/GitHub/New folder/node_modules/rollup/node_modules"
}
$ret=0
if (Test-Path "$basedir/node$exe") {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "$basedir/node$exe"  "$basedir/../rollup/bin/rollup" $args
  } else {
    & "$basedir/node$exe"  "$basedir/../rollup/bin/rollup" $args
  }
  $ret=$LASTEXITCODE
} else {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "node$exe"  "$basedir/../rollup/bin/rollup" $args
  } else {
    & "node$exe"  "$basedir/../rollup/bin/rollup" $args
  }
  $ret=$LASTEXITCODE
}
$env:NODE_PATH=$env_node_path
exit $ret
